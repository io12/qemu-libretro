.PHONY: all

all:
	if [ $(platform) = unix ]; then \
		apt-get update \
		&& apt-get -y upgrade \
		&& EXTRA_PATH= \
		&& CORE_SUFFIX=libretro \
		&& EXTRA_CONFIGURE_ARGS=; \
	elif [ $(platform) = android-arm ]; then \
		apt-get update \
		&& apt-get -y upgrade \
		&& apt-get -y install ninja-build \
		&& pip install tomli \
		&& EXTRA_PATH=$(ANDROID_NDK_LLVM)/bin \
		&& CORE_SUFFIX=libretro_android \
		&& EXTRA_CONFIGURE_ARGS="--cross-prefix=arm-linux-androideabi- --cc=armv7a-linux-androideabi30-clang --host-cc=gcc --cxx=armv7a-linux-androideabi30-clang++"; \
	elif [ $(platform) = android-arm64 ]; then \
		apt-get update \
		&& apt-get -y upgrade \
		&& apt-get -y install ninja-build \
		&& pip install tomli \
		&& EXTRA_PATH=$(ANDROID_NDK_LLVM)/bin \
		&& CORE_SUFFIX=libretro_android \
		&& EXTRA_CONFIGURE_ARGS="--cross-prefix=aarch64-linux-android- --cc=aarch64-linux-android30-clang --host-cc=gcc --cxx=aarch64-linux-android30-clang++"; \
	elif [ $(platform) = android-x86 ]; then \
		apt-get update \
		&& apt-get -y upgrade \
		&& apt-get -y install ninja-build \
		&& pip install tomli \
		&& EXTRA_PATH=$(ANDROID_NDK_LLVM)/bin \
		&& CORE_SUFFIX=libretro_android \
		&& EXTRA_CONFIGURE_ARGS="--cross-prefix=i686-linux-android- --cc=i686-linux-android30-clang --host-cc=gcc --cxx=i686-linux-android30-clang++"; \
	elif [ $(platform) = android-x86_64 ]; then \
		apt-get update \
		&& apt-get -y upgrade \
		&& apt-get -y install ninja-build \
		&& pip install tomli \
		&& EXTRA_PATH=$(ANDROID_NDK_LLVM)/bin \
		&& CORE_SUFFIX=libretro_android \
		&& EXTRA_CONFIGURE_ARGS="--cross-prefix=x86_64-linux-android- --cc=x86_64-linux-android30-clang --host-cc=gcc --cxx=x86_64-linux-android30-clang++"; \
	fi \
		&& mkdir build \
		&& cd build \
		&& PATH=$EXTRA_PATH:$PATH CFLAGS=-Wno-error ../configure \
			--without-default-features \
			--target-list=i386-softmmu \
			--glib=internal \
			--zlib=internal \
			--disable-pie \
			--disable-fdt \
			--enable-libretro \
			--audio-drv-list=libretro \
			--disable-sdl \
			$EXTRA_CONFIGURE_ARGS
		&& make -j$(NUMPROC) \
		&& cp libqemu-system-i386.so ../qemu_$CORE_SUFFIX.so
